query_type,query,col_1,col_2,df_command
Aggregation,Get the number of quantity values grouped by channel.,channel,quantity,df.groupby('channel')['quantity'].agg('count').reset_index()
Aggregation,Compute the minimum cost per region.,region,cost,df.groupby('region')['cost'].agg('min').reset_index()
Aggregation,Get the average cost grouped by month.,month,cost,df.groupby('month')['cost'].agg('mean').reset_index()
Aggregation,Give the median month for each month.,month,month,df.groupby('month')['month'].agg('median').reset_index()
Aggregation,Find standard deviation of profit grouped by store_id.,store_id,profit,df.groupby('store_id')['profit'].agg('std').reset_index()
Aggregation,Calculate the total expenses for each channel.,channel,expenses,df.groupby('channel')['expenses'].agg('sum').reset_index()
Aggregation,Find the maximum cost in every department.,department,cost,df.groupby('department')['cost'].agg('max').reset_index()
Aggregation,Compute the minimum cost per category.,category,cost,df.groupby('category')['cost'].agg('min').reset_index()
Aggregation,Show the sum of profit across city.,city,profit,df.groupby('city')['profit'].agg('sum').reset_index()
Aggregation,Find the maximum cost in every channel.,channel,cost,df.groupby('channel')['cost'].agg('max').reset_index()
Aggregation,Calculate the total tax for each city.,city,tax,df.groupby('city')['tax'].agg('sum').reset_index()
Aggregation,List the count of sales for each department.,department,sales,df.groupby('department')['sales'].agg('count').reset_index()
Aggregation,Give the median expenses for each customer_type.,customer_type,expenses,df.groupby('customer_type')['expenses'].agg('median').reset_index()
Aggregation,Calculate the total units_sold for each category.,category,units_sold,df.groupby('category')['units_sold'].agg('sum').reset_index()
Aggregation,Get the average store_id grouped by store_id.,store_id,store_id,df.groupby('store_id')['store_id'].agg('mean').reset_index()
Aggregation,Get the average cost grouped by product.,product,cost,df.groupby('product')['cost'].agg('mean').reset_index()
Aggregation,Find the maximum quantity in every channel.,channel,quantity,df.groupby('channel')['quantity'].agg('max').reset_index()
Aggregation,Find the maximum expenses in every channel.,channel,expenses,df.groupby('channel')['expenses'].agg('max').reset_index()
Aggregation,Get the number of order_value values grouped by customer_type.,customer_type,order_value,df.groupby('customer_type')['order_value'].agg('count').reset_index()
Aggregation,Show how many units_sold entries exist per month.,month,units_sold,df.groupby('month')['units_sold'].agg('count').reset_index()
Aggregation,Find standard deviation of discount grouped by store_id.,store_id,discount,df.groupby('store_id')['discount'].agg('std').reset_index()
Aggregation,Show how many quantity entries exist per department.,department,quantity,df.groupby('department')['quantity'].agg('count').reset_index()
Aggregation,Show the sum of units_sold across department.,department,units_sold,df.groupby('department')['units_sold'].agg('sum').reset_index()
Aggregation,Give the median sales for each category.,category,sales,df.groupby('category')['sales'].agg('median').reset_index()
Aggregation,Show how many units_sold entries exist per category.,category,units_sold,df.groupby('category')['units_sold'].agg('count').reset_index()
Aggregation,Show the sum of sales across department.,department,sales,df.groupby('department')['sales'].agg('sum').reset_index()
Aggregation,Calculate the total units_sold for each department.,department,units_sold,df.groupby('department')['units_sold'].agg('sum').reset_index()
Aggregation,Calculate the total discount for each department.,department,discount,df.groupby('department')['discount'].agg('sum').reset_index()
Aggregation,Show how many units_sold entries exist per month.,month,units_sold,df.groupby('month')['units_sold'].agg('count').reset_index()
Aggregation,List the count of units_sold for each channel.,channel,units_sold,df.groupby('channel')['units_sold'].agg('count').reset_index()
Aggregation,Find the maximum tax in every category.,category,tax,df.groupby('category')['tax'].agg('max').reset_index()
Aggregation,List the count of units_sold for each store_id.,store_id,units_sold,df.groupby('store_id')['units_sold'].agg('count').reset_index()
Aggregation,Find standard deviation of units_sold grouped by department.,department,units_sold,df.groupby('department')['units_sold'].agg('std').reset_index()
Aggregation,Get the average order_value grouped by city.,city,order_value,df.groupby('city')['order_value'].agg('mean').reset_index()
Aggregation,Find standard deviation of order_value grouped by store_id.,store_id,order_value,df.groupby('store_id')['order_value'].agg('std').reset_index()
Aggregation,Calculate the total region for each region.,region,region,df.groupby('region')['region'].agg('sum').reset_index()
Aggregation,Find standard deviation of discount grouped by department.,department,discount,df.groupby('department')['discount'].agg('std').reset_index()
Aggregation,Show the sum of units_sold across customer_type.,customer_type,units_sold,df.groupby('customer_type')['units_sold'].agg('sum').reset_index()
Aggregation,Show how many quantity entries exist per product.,product,quantity,df.groupby('product')['quantity'].agg('count').reset_index()
Aggregation,Find standard deviation of profit grouped by month.,month,profit,df.groupby('month')['profit'].agg('std').reset_index()
Aggregation,List the count of units_sold for each department.,department,units_sold,df.groupby('department')['units_sold'].agg('count').reset_index()
Aggregation,List the count of cost for each department.,department,cost,df.groupby('department')['cost'].agg('count').reset_index()
Aggregation,Calculate the total cost for each region.,region,cost,df.groupby('region')['cost'].agg('sum').reset_index()
Aggregation,Get the average units_sold grouped by product.,product,units_sold,df.groupby('product')['units_sold'].agg('mean').reset_index()
Aggregation,Find standard deviation of quantity grouped by store_id.,store_id,quantity,df.groupby('store_id')['quantity'].agg('std').reset_index()
Aggregation,Show the sum of order_value across region.,region,order_value,df.groupby('region')['order_value'].agg('sum').reset_index()
Aggregation,Find the maximum order_value in every region.,region,order_value,df.groupby('region')['order_value'].agg('max').reset_index()
Aggregation,Find standard deviation of expenses grouped by store_id.,store_id,expenses,df.groupby('store_id')['expenses'].agg('std').reset_index()
Aggregation,Compute the minimum order_value per channel.,channel,order_value,df.groupby('channel')['order_value'].agg('min').reset_index()
Aggregation,List the count of profit for each customer_type.,customer_type,profit,df.groupby('customer_type')['profit'].agg('count').reset_index()
Aggregation,Compute the minimum units_sold per region.,region,units_sold,df.groupby('region')['units_sold'].agg('min').reset_index()
Aggregation,Get the number of cost values grouped by region.,region,cost,df.groupby('region')['cost'].agg('count').reset_index()
Aggregation,Give the median sales for each region.,region,sales,df.groupby('region')['sales'].agg('median').reset_index()
Aggregation,Get the number of quantity values grouped by channel.,channel,quantity,df.groupby('channel')['quantity'].agg('count').reset_index()
Aggregation,Show how many profit entries exist per region.,region,profit,df.groupby('region')['profit'].agg('count').reset_index()
Aggregation,Show how many product entries exist per product.,product,product,df.groupby('product')['product'].agg('count').reset_index()
Aggregation,Get the average tax grouped by department.,department,tax,df.groupby('department')['tax'].agg('mean').reset_index()
Aggregation,Show the sum of order_value across department.,department,order_value,df.groupby('department')['order_value'].agg('sum').reset_index()
Aggregation,Get the number of units_sold values grouped by category.,category,units_sold,df.groupby('category')['units_sold'].agg('count').reset_index()
Aggregation,Get the number of sales values grouped by category.,category,sales,df.groupby('category')['sales'].agg('count').reset_index()
Aggregation,Get the average order_value grouped by category.,category,order_value,df.groupby('category')['order_value'].agg('mean').reset_index()
Aggregation,Get the number of cost values grouped by city.,city,cost,df.groupby('city')['cost'].agg('count').reset_index()
Aggregation,Compute the minimum units_sold per city.,city,units_sold,df.groupby('city')['units_sold'].agg('min').reset_index()
Aggregation,Show the sum of expenses across employee.,employee,expenses,df.groupby('employee')['expenses'].agg('sum').reset_index()
Aggregation,Find the maximum expenses in every store_id.,store_id,expenses,df.groupby('store_id')['expenses'].agg('max').reset_index()
Aggregation,Give the median region for each region.,region,region,df.groupby('region')['region'].agg('median').reset_index()
Aggregation,List the count of tax for each category.,category,tax,df.groupby('category')['tax'].agg('count').reset_index()
Aggregation,Get the average channel grouped by channel.,channel,channel,df.groupby('channel')['channel'].agg('mean').reset_index()
Aggregation,Show the sum of cost across month.,month,cost,df.groupby('month')['cost'].agg('sum').reset_index()
Aggregation,Find the maximum discount in every department.,department,discount,df.groupby('department')['discount'].agg('max').reset_index()
Aggregation,Show the sum of discount across month.,month,discount,df.groupby('month')['discount'].agg('sum').reset_index()
Aggregation,Find the maximum quantity in every channel.,channel,quantity,df.groupby('channel')['quantity'].agg('max').reset_index()
Aggregation,Compute the minimum tax per channel.,channel,tax,df.groupby('channel')['tax'].agg('min').reset_index()
Aggregation,Calculate the total cost for each month.,month,cost,df.groupby('month')['cost'].agg('sum').reset_index()
Aggregation,Get the average profit grouped by month.,month,profit,df.groupby('month')['profit'].agg('mean').reset_index()
Aggregation,Get the average channel grouped by channel.,channel,channel,df.groupby('channel')['channel'].agg('mean').reset_index()
Aggregation,Find the maximum expenses in every month.,month,expenses,df.groupby('month')['expenses'].agg('max').reset_index()
Aggregation,Get the number of units_sold values grouped by city.,city,units_sold,df.groupby('city')['units_sold'].agg('count').reset_index()
Aggregation,Show the sum of expenses across channel.,channel,expenses,df.groupby('channel')['expenses'].agg('sum').reset_index()
Aggregation,List the count of expenses for each region.,region,expenses,df.groupby('region')['expenses'].agg('count').reset_index()
Aggregation,Get the average order_value grouped by month.,month,order_value,df.groupby('month')['order_value'].agg('mean').reset_index()
Aggregation,Calculate the total sales for each city.,city,sales,df.groupby('city')['sales'].agg('sum').reset_index()
Aggregation,Find the maximum expenses in every product.,product,expenses,df.groupby('product')['expenses'].agg('max').reset_index()
Aggregation,List the count of cost for each employee.,employee,cost,df.groupby('employee')['cost'].agg('count').reset_index()
Aggregation,Show how many sales entries exist per department.,department,sales,df.groupby('department')['sales'].agg('count').reset_index()
Aggregation,Get the average profit grouped by channel.,channel,profit,df.groupby('channel')['profit'].agg('mean').reset_index()
Aggregation,Calculate the total discount for each category.,category,discount,df.groupby('category')['discount'].agg('sum').reset_index()
Aggregation,Show how many profit entries exist per employee.,employee,profit,df.groupby('employee')['profit'].agg('count').reset_index()
Aggregation,Find the maximum sales in every month.,month,sales,df.groupby('month')['sales'].agg('max').reset_index()
Aggregation,Give the median sales for each city.,city,sales,df.groupby('city')['sales'].agg('median').reset_index()
Aggregation,Show the sum of units_sold across department.,department,units_sold,df.groupby('department')['units_sold'].agg('sum').reset_index()
Aggregation,Give the median cost for each employee.,employee,cost,df.groupby('employee')['cost'].agg('median').reset_index()
Aggregation,Get the number of profit values grouped by customer_type.,customer_type,profit,df.groupby('customer_type')['profit'].agg('count').reset_index()
Aggregation,Find the maximum profit in every employee.,employee,profit,df.groupby('employee')['profit'].agg('max').reset_index()
Aggregation,Calculate the total profit for each city.,city,profit,df.groupby('city')['profit'].agg('sum').reset_index()
Aggregation,Find standard deviation of units_sold grouped by month.,month,units_sold,df.groupby('month')['units_sold'].agg('std').reset_index()
Aggregation,Find the maximum employee in every employee.,employee,employee,df.groupby('employee')['employee'].agg('max').reset_index()
Aggregation,Calculate the total quantity for each customer_type.,customer_type,quantity,df.groupby('customer_type')['quantity'].agg('sum').reset_index()
Aggregation,Show the sum of quantity across city.,city,quantity,df.groupby('city')['quantity'].agg('sum').reset_index()
Aggregation,Compute the minimum units_sold per customer_type.,customer_type,units_sold,df.groupby('customer_type')['units_sold'].agg('min').reset_index()
Aggregation,group job id and apply min on Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('min').reset_index()
Aggregation,group JOB ID and apply count on Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,group job identifier and apply sum on Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('sum').reset_index()
Aggregation,agcy wise std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,group AGENCY and apply mean on # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('mean').reset_index()
Aggregation,group the data by AGENCY and get sum of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('sum').reset_index()
Aggregation,min Level per biz title,Business Title,Level,df.groupby('Business Title')['Level'].agg('min').reset_index()
Aggregation,group the data by biz title and get max of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,aggregate # Of Positions by civil title using max,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('max').reset_index()
Aggregation,group civil title and apply median on # Of Positions,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('median').reset_index()
Aggregation,count Job ID per title class,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,group title code no and apply median on Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('median').reset_index()
Aggregation,group the data by tcode and get count of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('count').reset_index()
Aggregation,count Level based on tile code,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('count').reset_index()
Aggregation,sum # Of Positions by agency,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('sum').reset_index()
Aggregation,median Level by Job Id,Job ID,Level,df.groupby('Job ID')['Level'].agg('median').reset_index()
Aggregation,count Level per official title,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,organize by service title and get sum of # Of Positions,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('sum').reset_index()
Aggregation,categorized by tile code and get mean of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('mean').reset_index()
Aggregation,split by agcy and get min of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,min Level wise title code,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('min').reset_index()
Aggregation,group by organisation and get max of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('max').reset_index()
Aggregation,sum Level grpby title of job,Business Title,Level,df.groupby('Business Title')['Level'].agg('sum').reset_index()
Aggregation,max Job ID per title classfn,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('max').reset_index()
Aggregation,sum Level grp biz title,Business Title,Level,df.groupby('Business Title')['Level'].agg('sum').reset_index()
Aggregation,organize by title and get count of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,bucket by titlecode number and get median of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('median').reset_index()
Aggregation,partition by business title and get count of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,count Level by JOB ID,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,std Level grpby tcode,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,max # Of Positions based on service title,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('max').reset_index()
Aggregation,partition by classification and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,groub by title classfn and get std of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('std').reset_index()
Aggregation,max Job ID grpby PostingType,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('max').reset_index()
Aggregation,group by job id and get max of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('max').reset_index()
Aggregation,max Job ID grp posting type,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('max').reset_index()
Aggregation,groub by classification and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,organize by posting and get median of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('median').reset_index()
Aggregation,split by tcode and get std of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,mean Level wise job identifier,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,grup by biz title and get max of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,split by biz title and get median of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('median').reset_index()
Aggregation,categorized by title_code and get std of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,count Level on the basis of job id,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,partition by classification and get min of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('min').reset_index()
Aggregation,categorized by agency and get std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,cluster by agcy and get std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,grup by agency and get mean of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('mean').reset_index()
Aggregation,categorized by title and get std of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('std').reset_index()
Aggregation,categorized by AGENCY and get std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,partition by title class and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,std Level based on job id,Job ID,Level,df.groupby('Job ID')['Level'].agg('std').reset_index()
Aggregation,partition by AGENCY and get min of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,std Level by job identifier,Job ID,Level,df.groupby('Job ID')['Level'].agg('std').reset_index()
Aggregation,max Level grp title of job,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,groub by agcy and get min of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,partition by title of job and get max of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,groop by title classfn and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,groub by post type and get median of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('median').reset_index()
Aggregation,organize by job id and get mean of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,std Level based on job id,Job ID,Level,df.groupby('Job ID')['Level'].agg('std').reset_index()
Aggregation,max # Of Positions based on agency,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('max').reset_index()
Aggregation,split by Job Id and get mean of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,count # Of Positions grpby service title,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('count').reset_index()
Aggregation,partition by PostingType and get sum of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('sum').reset_index()
Aggregation,group by job identifier and get mean of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,split by posting and get std of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('std').reset_index()
Aggregation,partition by tile code and get sum of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('sum').reset_index()
Aggregation,i want to see it group organisation,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,can you grp type of post?,Posting Type,,df.groupby('Posting Type').first().reset_index()
Aggregation,i want to see it by title of job,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,grpby organisation,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,i want to see it based on title,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,show data by AGENCY,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,show data categorize by PostingType,Posting Type,,df.groupby('Posting Type').first().reset_index()
Aggregation,grp biz title,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,can you organize by AGENCY?,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,categorize by cst,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,cluster by Agency,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,i want to see it grp cst,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,i want to see it grpby biz title,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,based on service title,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,can you cluster by govt title?,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,show data organize by title code no,Title Code No,,df.groupby('Title Code No').first().reset_index()
Aggregation,can you grouped by j o b i d?,Job ID,,df.groupby('Job ID').first().reset_index()
Aggregation,grouped by AGENCY,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,can you split by agcy?,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,show data by govt title,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,Could you group the data by title code and show the mean of Level?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('mean').reset_index()
Aggregation,I'd like to know the count of Job ID by title classification.,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,How many # Of Positions values are there per civil title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('mean').reset_index()
Aggregation,Which title code no has the highest Level std?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,Can you show me the max # Of Positions grouped by service title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('max').reset_index()
Aggregation,What’s the min of # Of Positions in each AGENCY group?,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,List count # Of Positions per civil service.,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('count').reset_index()
Aggregation,Can you show me the mean Level grouped by tile code?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('mean').reset_index()
Aggregation,List sum # Of Positions per Agency.,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('sum').reset_index()
Aggregation,Could you group the data by Agency and show the count of # Of Positions?,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('count').reset_index()
Aggregation,Which service title has the highest # Of Positions std?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('std').reset_index()
Aggregation,I'd like to know the min of Level by business title.,Business Title,Level,df.groupby('Business Title')['Level'].agg('min').reset_index()
Aggregation,Which title classfn has the highest Job ID count?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,Could you group the data by biz title and show the count of Level?,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,Which j o b i d has the highest Level min?,Job ID,Level,df.groupby('Job ID')['Level'].agg('min').reset_index()
Aggregation,List std Level per official title.,Business Title,Level,df.groupby('Business Title')['Level'].agg('std').reset_index()
Aggregation,Give me the std of # Of Positions for every cst.,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('std').reset_index()
Aggregation,How is Job ID distributed across title classfn?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('std').reset_index()
Aggregation,Which business title has the highest Level sum?,Business Title,Level,df.groupby('Business Title')['Level'].agg('sum').reset_index()
Aggregation,Could you group the data by title class and show the sum of Job ID?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('sum').reset_index()
Aggregation,How is Job ID distributed across title classfn?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,What’s the count of Level in each j o b i d group?,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,How many Job ID values are there per title classification?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('sum').reset_index()
Aggregation,How many # Of Positions values are there per civil title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('count').reset_index()
Aggregation,Can you show me the min # Of Positions grouped by civil title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('min').reset_index()
Aggregation,group job id and apply min on Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('min').reset_index()
Aggregation,group JOB ID and apply count on Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,group job identifier and apply sum on Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('sum').reset_index()
Aggregation,agcy wise std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,group AGENCY and apply mean on # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('mean').reset_index()
Aggregation,group the data by AGENCY and get sum of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('sum').reset_index()
Aggregation,min Level per biz title,Business Title,Level,df.groupby('Business Title')['Level'].agg('min').reset_index()
Aggregation,group the data by biz title and get max of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,aggregate # Of Positions by civil title using max,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('max').reset_index()
Aggregation,group civil title and apply median on # Of Positions,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('median').reset_index()
Aggregation,count Job ID per title class,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,group title code no and apply median on Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('median').reset_index()
Aggregation,group the data by tcode and get count of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('count').reset_index()
Aggregation,count Level based on tile code,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('count').reset_index()
Aggregation,sum # Of Positions by agency,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('sum').reset_index()
Aggregation,median Level by Job Id,Job ID,Level,df.groupby('Job ID')['Level'].agg('median').reset_index()
Aggregation,count Level per official title,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,organize by service title and get sum of # Of Positions,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('sum').reset_index()
Aggregation,categorized by tile code and get mean of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('mean').reset_index()
Aggregation,split by agcy and get min of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,min Level wise title code,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('min').reset_index()
Aggregation,group by organisation and get max of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('max').reset_index()
Aggregation,sum Level grpby title of job,Business Title,Level,df.groupby('Business Title')['Level'].agg('sum').reset_index()
Aggregation,max Job ID per title classfn,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('max').reset_index()
Aggregation,sum Level grp biz title,Business Title,Level,df.groupby('Business Title')['Level'].agg('sum').reset_index()
Aggregation,organize by title and get count of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,bucket by titlecode number and get median of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('median').reset_index()
Aggregation,partition by business title and get count of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,count Level by JOB ID,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,std Level grpby tcode,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,max # Of Positions based on service title,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('max').reset_index()
Aggregation,partition by classification and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,groub by title classfn and get std of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('std').reset_index()
Aggregation,max Job ID grpby PostingType,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('max').reset_index()
Aggregation,group by job id and get max of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('max').reset_index()
Aggregation,max Job ID grp posting type,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('max').reset_index()
Aggregation,groub by classification and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,organize by posting and get median of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('median').reset_index()
Aggregation,split by tcode and get std of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,mean Level wise job identifier,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,grup by biz title and get max of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,split by biz title and get median of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('median').reset_index()
Aggregation,categorized by title_code and get std of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,count Level on the basis of job id,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,partition by classification and get min of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('min').reset_index()
Aggregation,categorized by agency and get std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,cluster by agcy and get std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,grup by agency and get mean of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('mean').reset_index()
Aggregation,categorized by title and get std of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('std').reset_index()
Aggregation,categorized by AGENCY and get std of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('std').reset_index()
Aggregation,partition by title class and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,std Level based on job id,Job ID,Level,df.groupby('Job ID')['Level'].agg('std').reset_index()
Aggregation,partition by AGENCY and get min of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,std Level by job identifier,Job ID,Level,df.groupby('Job ID')['Level'].agg('std').reset_index()
Aggregation,max Level grp title of job,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,groub by agcy and get min of # Of Positions,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,partition by title of job and get max of Level,Business Title,Level,df.groupby('Business Title')['Level'].agg('max').reset_index()
Aggregation,groop by title classfn and get mean of Job ID,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,groub by post type and get median of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('median').reset_index()
Aggregation,organize by job id and get mean of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,std Level based on job id,Job ID,Level,df.groupby('Job ID')['Level'].agg('std').reset_index()
Aggregation,max # Of Positions based on agency,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('max').reset_index()
Aggregation,split by Job Id and get mean of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,count # Of Positions grpby service title,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('count').reset_index()
Aggregation,partition by PostingType and get sum of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('sum').reset_index()
Aggregation,group by job identifier and get mean of Level,Job ID,Level,df.groupby('Job ID')['Level'].agg('mean').reset_index()
Aggregation,split by posting and get std of Job ID,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('std').reset_index()
Aggregation,partition by tile code and get sum of Level,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('sum').reset_index()
Aggregation,i want to see it group organisation,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,can you grp type of post?,Posting Type,,df.groupby('Posting Type').first().reset_index()
Aggregation,i want to see it by title of job,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,grpby organisation,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,i want to see it based on title,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,show data by AGENCY,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,show data categorize by PostingType,Posting Type,,df.groupby('Posting Type').first().reset_index()
Aggregation,grp biz title,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,can you organize by AGENCY?,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,categorize by cst,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,cluster by Agency,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,i want to see it grp cst,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,i want to see it grpby biz title,Business Title,,df.groupby('Business Title').first().reset_index()
Aggregation,based on service title,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,can you cluster by govt title?,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,show data organize by title code no,Title Code No,,df.groupby('Title Code No').first().reset_index()
Aggregation,can you grouped by j o b i d?,Job ID,,df.groupby('Job ID').first().reset_index()
Aggregation,grouped by AGENCY,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,can you split by agcy?,Agency,,df.groupby('Agency').first().reset_index()
Aggregation,show data by govt title,Civil Service Title,,df.groupby('Civil Service Title').first().reset_index()
Aggregation,Could you group the data by title code and show the mean of Level?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('mean').reset_index()
Aggregation,I'd like to know the count of Job ID by title classification.,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,How many # Of Positions values are there per civil title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('mean').reset_index()
Aggregation,Which title code no has the highest Level std?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,Can you show me the max # Of Positions grouped by service title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('max').reset_index()
Aggregation,What’s the min of # Of Positions in each AGENCY group?,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('min').reset_index()
Aggregation,List count # Of Positions per civil service.,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('count').reset_index()
Aggregation,Can you show me the mean Level grouped by tile code?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('mean').reset_index()
Aggregation,List sum # Of Positions per Agency.,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('sum').reset_index()
Aggregation,Could you group the data by Agency and show the count of # Of Positions?,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('count').reset_index()
Aggregation,Which service title has the highest # Of Positions std?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('std').reset_index()
Aggregation,I'd like to know the min of Level by business title.,Business Title,Level,df.groupby('Business Title')['Level'].agg('min').reset_index()
Aggregation,Which title classfn has the highest Job ID count?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,Could you group the data by biz title and show the count of Level?,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,Which j o b i d has the highest Level min?,Job ID,Level,df.groupby('Job ID')['Level'].agg('min').reset_index()
Aggregation,List std Level per official title.,Business Title,Level,df.groupby('Business Title')['Level'].agg('std').reset_index()
Aggregation,Give me the std of # Of Positions for every cst.,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('std').reset_index()
Aggregation,How is Job ID distributed across title classfn?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('std').reset_index()
Aggregation,Which business title has the highest Level sum?,Business Title,Level,df.groupby('Business Title')['Level'].agg('sum').reset_index()
Aggregation,Could you group the data by title class and show the sum of Job ID?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('sum').reset_index()
Aggregation,How is Job ID distributed across title classfn?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('count').reset_index()
Aggregation,What’s the count of Level in each j o b i d group?,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,How many Job ID values are there per title classification?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('sum').reset_index()
Aggregation,How many # Of Positions values are there per civil title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('count').reset_index()
Aggregation,Can you show me the min # Of Positions grouped by civil title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('min').reset_index()
Aggregation,How does the Level vary across job id?,Job ID,Level,df.groupby('Job ID')['Level'].agg('std').reset_index()
Aggregation,Show the spread of Job ID by classification.,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('std').reset_index()
Aggregation,What’s the variation in # Of Positions per civil title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('mean').reset_index()
Aggregation,Tell me the spread of Level across different title code no.,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,What is the variability of # Of Positions grouped by civil service?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('std').reset_index()
Aggregation,What is the variability of Level grouped by title code?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,What is the variability of # Of Positions grouped by service title?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('std').reset_index()
Aggregation,Tell me the spread of # Of Positions across different govt title.,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('std').reset_index()
Aggregation,Check how Job ID changes across type of post.,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('mean').reset_index()
Aggregation,What's the range of # Of Positions for each AGENCY?,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('max').reset_index()
Aggregation,Give the scattered values of Level by jobid.,Job ID,Level,df.groupby('Job ID')['Level'].agg('count').reset_index()
Aggregation,How is Job ID scattered over type of post?,Posting Type,Job ID,df.groupby('Posting Type')['Job ID'].agg('count').reset_index()
Aggregation,How does the Level vary across title_code?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('std').reset_index()
Aggregation,Give the scattered values of Level by title.,Business Title,Level,df.groupby('Business Title')['Level'].agg('count').reset_index()
Aggregation,How does the Job ID vary across title classfn?,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('std').reset_index()
Aggregation,What's the range of Level for each tcode?,Title Code No,Level,df.groupby('Title Code No')['Level'].agg('max').reset_index()
Aggregation,What’s the variation in # Of Positions per agcy?,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('mean').reset_index()
Aggregation,Check how Job ID changes across title classfn.,Title Classification,Job ID,df.groupby('Title Classification')['Job ID'].agg('mean').reset_index()
Aggregation,What’s the variation in # Of Positions per civil service?,Civil Service Title,# Of Positions,df.groupby('Civil Service Title')['# Of Positions'].agg('mean').reset_index()
Aggregation,Can you show the distribution of # Of Positions across agcy?,Agency,# Of Positions,df.groupby('Agency')['# Of Positions'].agg('count').reset_index()