query_type,query,df_command,col_1,col_2
Sorting & Ranking,Show customers in increasing order of revenue.,"df.sort_values(by='revenue', ascending=True)",customers,revenue
Sorting & Ranking,Display employees in order of decreasing units_sold.,"df.sort_values(by='units_sold', ascending=False)",employees,units_sold
Sorting & Ranking,Get the highest sales values for each employees.,"df.sort_values(by='sales', ascending=False)",employees,sales
Sorting & Ranking,Find top 3 stores with highest rating.,"df.sort_values(by='rating', ascending=False).head(3)",stores,rating
Sorting & Ranking,Get the highest sales values for each departments.,"df.sort_values(by='sales', ascending=False)",departments,sales
Sorting & Ranking,Find top 3 departments with highest units_sold.,"df.sort_values(by='units_sold', ascending=False).head(3)",departments,units_sold
Sorting & Ranking,List the lowest revenue values grouped by stores.,"df.sort_values(by='revenue', ascending=True)",stores,revenue
Sorting & Ranking,Show customers in increasing order of profit.,"df.sort_values(by='profit', ascending=True)",customers,profit
Sorting & Ranking,Rank departments by units_sold.,df['units_sold_rank'] = df['units_sold'].rank(ascending=False),departments,units_sold
Sorting & Ranking,Get the highest profit values for each stores.,"df.sort_values(by='profit', ascending=False)",stores,profit
Sorting & Ranking,Rank employees by expenses.,df['expenses_rank'] = df['expenses'].rank(ascending=False),employees,expenses
Sorting & Ranking,Show customers sorted by profit ascending.,"df.sort_values(by='profit', ascending=True)",customers,profit
Sorting & Ranking,Show stores sorted by sales ascending.,"df.sort_values(by='sales', ascending=True)",stores,sales
Sorting & Ranking,Rank stores by expenses.,df['expenses_rank'] = df['expenses'].rank(ascending=False),stores,expenses
Sorting & Ranking,Display stores in order of decreasing expenses.,"df.sort_values(by='expenses', ascending=False)",stores,expenses
Sorting & Ranking,Get bottom 10 stores based on sales.,"df.sort_values(by='sales', ascending=True).head(10)",stores,sales
Sorting & Ranking,Get bottom 10 customers based on units_sold.,"df.sort_values(by='units_sold', ascending=True).head(10)",customers,units_sold
Sorting & Ranking,Rank products by profit.,df['profit_rank'] = df['profit'].rank(ascending=False),products,profit
Sorting & Ranking,Sort customers by profit in descending order.,"df.sort_values(by='profit', ascending=False)",customers,profit
Sorting & Ranking,List top 5 employees by profit.,"df.sort_values(by='profit', ascending=False).head(5)",employees,profit
Sorting & Ranking,Get bottom 10 products based on profit.,"df.sort_values(by='profit', ascending=True).head(10)",products,profit
Sorting & Ranking,Find top 3 departments with highest units_sold.,"df.sort_values(by='units_sold', ascending=False).head(3)",departments,units_sold
Sorting & Ranking,Display products in order of decreasing rating.,"df.sort_values(by='rating', ascending=False)",products,rating
Sorting & Ranking,Get the highest rating values for each stores.,"df.sort_values(by='rating', ascending=False)",stores,rating
Sorting & Ranking,Show customers in increasing order of sales.,"df.sort_values(by='sales', ascending=True)",customers,sales
Sorting & Ranking,List the lowest revenue values grouped by products.,"df.sort_values(by='revenue', ascending=True)",products,revenue
Sorting & Ranking,Find top 3 employees with highest expenses.,"df.sort_values(by='expenses', ascending=False).head(3)",employees,expenses
Sorting & Ranking,Sort stores by sales in descending order.,"df.sort_values(by='sales', ascending=False)",stores,sales
Sorting & Ranking,Sort stores by revenue in descending order.,"df.sort_values(by='revenue', ascending=False)",stores,revenue
Sorting & Ranking,Find top 3 products with highest sales.,"df.sort_values(by='sales', ascending=False).head(3)",products,sales
Sorting & Ranking,Rank products by rating.,df['rating_rank'] = df['rating'].rank(ascending=False),products,rating
Sorting & Ranking,Rank departments by profit.,df['profit_rank'] = df['profit'].rank(ascending=False),departments,profit
Sorting & Ranking,Get bottom 10 employees based on units_sold.,"df.sort_values(by='units_sold', ascending=True).head(10)",employees,units_sold
Sorting & Ranking,Display customers in order of decreasing expenses.,"df.sort_values(by='expenses', ascending=False)",customers,expenses
Sorting & Ranking,Get bottom 10 employees based on revenue.,"df.sort_values(by='revenue', ascending=True).head(10)",employees,revenue
Sorting & Ranking,Sort customers by profit in descending order.,"df.sort_values(by='profit', ascending=False)",customers,profit
Sorting & Ranking,List the lowest profit values grouped by employees.,"df.sort_values(by='profit', ascending=True)",employees,profit
Sorting & Ranking,List the lowest revenue values grouped by employees.,"df.sort_values(by='revenue', ascending=True)",employees,revenue
Sorting & Ranking,Show departments in increasing order of profit.,"df.sort_values(by='profit', ascending=True)",departments,profit
Sorting & Ranking,Find top 3 products with highest profit.,"df.sort_values(by='profit', ascending=False).head(3)",products,profit
Sorting & Ranking,Find top 3 customers with highest revenue.,"df.sort_values(by='revenue', ascending=False).head(3)",customers,revenue
Sorting & Ranking,Sort stores by rating in descending order.,"df.sort_values(by='rating', ascending=False)",stores,rating
Sorting & Ranking,List the lowest expenses values grouped by departments.,"df.sort_values(by='expenses', ascending=True)",departments,expenses
Sorting & Ranking,Display departments in order of decreasing profit.,"df.sort_values(by='profit', ascending=False)",departments,profit
Sorting & Ranking,Find top 3 employees with highest profit.,"df.sort_values(by='profit', ascending=False).head(3)",employees,profit
Sorting & Ranking,Show products in increasing order of revenue.,"df.sort_values(by='revenue', ascending=True)",products,revenue
Sorting & Ranking,Display customers in order of decreasing rating.,"df.sort_values(by='rating', ascending=False)",customers,rating
Sorting & Ranking,List the lowest expenses values grouped by departments.,"df.sort_values(by='expenses', ascending=True)",departments,expenses
Sorting & Ranking,Find top 3 products with highest expenses.,"df.sort_values(by='expenses', ascending=False).head(3)",products,expenses
Sorting & Ranking,Display departments in order of decreasing sales.,"df.sort_values(by='sales', ascending=False)",departments,sales
Sorting & Ranking,List the lowest units_sold values grouped by products.,"df.sort_values(by='units_sold', ascending=True)",products,units_sold
Sorting & Ranking,Show departments in increasing order of revenue.,"df.sort_values(by='revenue', ascending=True)",departments,revenue
Sorting & Ranking,List the lowest revenue values grouped by departments.,"df.sort_values(by='revenue', ascending=True)",departments,revenue
Sorting & Ranking,Show customers sorted by rating ascending.,"df.sort_values(by='rating', ascending=True)",customers,rating
Sorting & Ranking,Get bottom 10 products based on expenses.,"df.sort_values(by='expenses', ascending=True).head(10)",products,expenses
Sorting & Ranking,List top 5 departments by profit.,"df.sort_values(by='profit', ascending=False).head(5)",departments,profit
Sorting & Ranking,List top 5 customers by rating.,"df.sort_values(by='rating', ascending=False).head(5)",customers,rating
Sorting & Ranking,Get bottom 10 products based on rating.,"df.sort_values(by='rating', ascending=True).head(10)",products,rating
Sorting & Ranking,Rank stores by revenue.,df['revenue_rank'] = df['revenue'].rank(ascending=False),stores,revenue
Sorting & Ranking,Show employees sorted by units_sold ascending.,"df.sort_values(by='units_sold', ascending=True)",employees,units_sold
Sorting & Ranking,Rank customers by units_sold.,df['units_sold_rank'] = df['units_sold'].rank(ascending=False),customers,units_sold
Sorting & Ranking,Find top 3 employees with highest rating.,"df.sort_values(by='rating', ascending=False).head(3)",employees,rating
Sorting & Ranking,Show departments in increasing order of expenses.,"df.sort_values(by='expenses', ascending=True)",departments,expenses
Sorting & Ranking,Rank products by profit.,df['profit_rank'] = df['profit'].rank(ascending=False),products,profit
Sorting & Ranking,Sort employees by revenue in descending order.,"df.sort_values(by='revenue', ascending=False)",employees,revenue
Sorting & Ranking,Display customers in order of decreasing rating.,"df.sort_values(by='rating', ascending=False)",customers,rating
Sorting & Ranking,Sort stores by sales in descending order.,"df.sort_values(by='sales', ascending=False)",stores,sales
Sorting & Ranking,Find top 3 customers with highest sales.,"df.sort_values(by='sales', ascending=False).head(3)",customers,sales
Sorting & Ranking,Show departments in increasing order of expenses.,"df.sort_values(by='expenses', ascending=True)",departments,expenses
Sorting & Ranking,Find top 3 customers with highest profit.,"df.sort_values(by='profit', ascending=False).head(3)",customers,profit
Sorting & Ranking,Rank products by expenses.,df['expenses_rank'] = df['expenses'].rank(ascending=False),products,expenses
Sorting & Ranking,Show stores sorted by sales ascending.,"df.sort_values(by='sales', ascending=True)",stores,sales
Sorting & Ranking,List the lowest rating values grouped by customers.,"df.sort_values(by='rating', ascending=True)",customers,rating
Sorting & Ranking,List the lowest expenses values grouped by employees.,"df.sort_values(by='expenses', ascending=True)",employees,expenses
Sorting & Ranking,Sort stores by expenses in descending order.,"df.sort_values(by='expenses', ascending=False)",stores,expenses
Sorting & Ranking,Find top 3 stores with highest sales.,"df.sort_values(by='sales', ascending=False).head(3)",stores,sales
Sorting & Ranking,Get bottom 10 products based on sales.,"df.sort_values(by='sales', ascending=True).head(10)",products,sales
Sorting & Ranking,Find top 2 stores with highest sales.,"df.sort_values(by='sales', ascending=False).head(2)",stores,sales
Sorting & Ranking,Sort employees by units_sold in descending order.,"df.sort_values(by='units_sold', ascending=False)",employees,units_sold
Sorting & Ranking,Get bottom 10 stores based on profit.,"df.sort_values(by='profit', ascending=True).head(10)",stores,profit
Sorting & Ranking,Rank customers by profit.,df['profit_rank'] = df['profit'].rank(ascending=False),customers,profit
Sorting & Ranking,List the lowest profit values grouped by employees.,"df.sort_values(by='profit', ascending=True)",employees,profit
Sorting & Ranking,Sort stores by units_sold in descending order.,"df.sort_values(by='units_sold', ascending=False)",stores,units_sold
Sorting & Ranking,Display departments in order of decreasing sales.,"df.sort_values(by='sales', ascending=False)",departments,sales
Sorting & Ranking,Rank employees by profit.,df['profit_rank'] = df['profit'].rank(ascending=False),employees,profit
Sorting & Ranking,Show employees in increasing order of rating.,"df.sort_values(by='rating', ascending=True)",employees,rating
Sorting & Ranking,Sort departments by units_sold in descending order.,"df.sort_values(by='units_sold', ascending=False)",departments,units_sold
Sorting & Ranking,Rank products by profit.,df['profit_rank'] = df['profit'].rank(ascending=False),products,profit
Sorting & Ranking,Find top 2 employees with highest sales.,"df.sort_values(by='sales', ascending=False).head(2)",employees,sales
Sorting & Ranking,Show products in increasing order of expenses.,"df.sort_values(by='expenses', ascending=True)",products,expenses
Sorting & Ranking,Show customers sorted by sales ascending.,"df.sort_values(by='sales', ascending=True)",customers,sales
Sorting & Ranking,List top 5 departments by revenue.,"df.sort_values(by='revenue', ascending=False).head(5)",departments,revenue
Sorting & Ranking,Get bottom 10 customers based on revenue.,"df.sort_values(by='revenue', ascending=True).head(10)",customers,revenue
Sorting & Ranking,Sort customers by revenue in descending order.,"df.sort_values(by='revenue', ascending=False)",customers,revenue
Sorting & Ranking,List the lowest revenue values grouped by employees.,"df.sort_values(by='revenue', ascending=True)",employees,revenue
Sorting & Ranking,Rank employees by units_sold.,df['units_sold_rank'] = df['units_sold'].rank(ascending=False),employees,units_sold
Sorting & Ranking,List top 5 departments by revenue.,"df.sort_values(by='revenue', ascending=False).head(5)",departments,revenue
Sorting & Ranking,Get bottom 10 customers based on rating.,"df.sort_values(by='rating', ascending=True).head(10)",customers,rating
Sorting & Ranking,Get bottom 10 products based on expenses.,"df.sort_values(by='expenses', ascending=True).head(10)",products,expenses
Sorting & Ranking,List top 5 employees by sales.,"df.sort_values(by='sales', ascending=False).head(5)",employees,sales
Sorting & Ranking,10 customers with most revenue,"df.sort_values(by='revenue', ascending=False).head(10)",customers,revenue
Sorting & Ranking,stores sorted top by profit,"df.sort_values(by='profit', ascending=False)",stores,profit
Sorting & Ranking,show top 20 products by ratings,"df.sort_values(by='ratings', ascending=True).head(20)",products,ratings
Sorting & Ranking,list 10 stores having low to high profit,"df.sort_values(by='profit', ascending=True).head(10)",stores,profit
Sorting & Ranking,categories sorted least by orders,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,get top 20 customers increasing revenue,"df.sort_values(by='revenue', ascending=True).head(20)",customers,revenue
Sorting & Ranking,list 5 categories having decreasing orders,"df.sort_values(by='orders', ascending=False).head(5)",categories,orders
Sorting & Ranking,show top 20 customers by revenue,"df.sort_values(by='revenue', ascending=False).head(20)",customers,revenue
Sorting & Ranking,get top 10 stores bottom profit,"df.sort_values(by='profit', ascending=True).head(10)",stores,profit
Sorting & Ranking,organize products by ratings (least),"df.sort_values(by='ratings', ascending=True)",products,ratings
Sorting & Ranking,list 20 employees having increasing sales,"df.sort_values(by='sales', ascending=True).head(20)",employees,sales
Sorting & Ranking,sort categories by orders in bottom order,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,arrange all stores according to most profit,"df.sort_values(by='profit', ascending=False)",stores,profit
Sorting & Ranking,get top 3 products greatest ratings,"df.sort_values(by='ratings', ascending=False).head(3)",products,ratings
Sorting & Ranking,get top 20 customers highest revenue,"df.sort_values(by='revenue', ascending=False).head(20)",customers,revenue
Sorting & Ranking,customers sorted most by revenue,"df.sort_values(by='revenue', ascending=False)",customers,revenue
Sorting & Ranking,categories sorted bottom by orders,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,employees sorted most by sales,"df.sort_values(by='sales', ascending=False)",employees,sales
Sorting & Ranking,employees sorted low to high by units_sold,"df.sort_values(by='units_sold', ascending=True)",employees,units_sold
Sorting & Ranking,show top 20 products by ratings,"df.sort_values(by='ratings', ascending=False).head(20)",products,ratings
Sorting & Ranking,3 employees with greatest sales,"df.sort_values(by='sales', ascending=False).head(3)",employees,sales
Sorting & Ranking,customers sorted bottom by revenue,"df.sort_values(by='revenue', ascending=True)",customers,revenue
Sorting & Ranking,5 employees with greatest sales,"df.sort_values(by='sales', ascending=False).head(5)",employees,sales
Sorting & Ranking,show top 5 employees by sales,"df.sort_values(by='sales', ascending=True).head(5)",employees,sales
Sorting & Ranking,organize products by ratings (bottom),"df.sort_values(by='ratings', ascending=True)",products,ratings
Sorting & Ranking,categories sorted ascending by orders,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,categories sorted top by orders,"df.sort_values(by='orders', ascending=False)",categories,orders
Sorting & Ranking,show top 10 employees by sales,"df.sort_values(by='sales', ascending=False).head(10)",employees,sales
Sorting & Ranking,customers sorted descending by revenue,"df.sort_values(by='revenue', ascending=False)",customers,revenue
Sorting & Ranking,arrange all customers according to low to high revenue,"df.sort_values(by='revenue', ascending=True)",customers,revenue
Sorting & Ranking,get top 10 categories bottom orders,"df.sort_values(by='orders', ascending=True).head(10)",categories,orders
Sorting & Ranking,order stores based on profit (least),"df.sort_values(by='profit', ascending=True)",stores,profit
Sorting & Ranking,order products based on ratings (greatest),"df.sort_values(by='ratings', ascending=False)",products,ratings
Sorting & Ranking,3 employees with least units_sold,"df.sort_values(by='units_sold', ascending=True).head(3)",employees,units_sold
Sorting & Ranking,get top 5 employees decreasing units_sold,"df.sort_values(by='units_sold', ascending=False).head(5)",employees,units_sold
Sorting & Ranking,organize stores by profit (bottom),"df.sort_values(by='profit', ascending=True)",stores,profit
Sorting & Ranking,sort stores by profit in least order,"df.sort_values(by='profit', ascending=True)",stores,profit
Sorting & Ranking,arrange all stores according to high to low profit,"df.sort_values(by='profit', ascending=False)",stores,profit
Sorting & Ranking,organize employees by units_sold (greatest),"df.sort_values(by='units_sold', ascending=False)",employees,units_sold
Sorting & Ranking,sort categories by orders in most order,"df.sort_values(by='orders', ascending=False)",categories,orders
Sorting & Ranking,get top 5 employees top sales,"df.sort_values(by='sales', ascending=False).head(5)",employees,sales
Sorting & Ranking,order products based on ratings (most),"df.sort_values(by='ratings', ascending=False)",products,ratings
Sorting & Ranking,organize products by ratings (increasing),"df.sort_values(by='ratings', ascending=True)",products,ratings
Sorting & Ranking,order categories based on orders (descending),"df.sort_values(by='orders', ascending=False)",categories,orders
Sorting & Ranking,list 5 employees having least sales,"df.sort_values(by='sales', ascending=True).head(5)",employees,sales
Sorting & Ranking,arrange all employees according to decreasing units_sold,"df.sort_values(by='units_sold', ascending=False)",employees,units_sold
Sorting & Ranking,get top 20 employees highest sales,"df.sort_values(by='sales', ascending=False).head(20)",employees,sales
Sorting & Ranking,display 3 stores sorted by profit (ascending),"df.sort_values(by='profit', ascending=True).head(3)",stores,profit
Sorting & Ranking,arrange all customers according to low to high revenue,"df.sort_values(by='revenue', ascending=True)",customers,revenue
Sorting & Ranking,employees sorted least by sales,"df.sort_values(by='sales', ascending=True)",employees,sales
Sorting & Ranking,10 customrs with most Revenue,"df.sort_values(by='revenue', ascending=False).head(10)",customers,revenue
Sorting & Ranking,STORES sorted top by Profitt,"df.sort_values(by='profit', ascending=False)",stores,profit
Sorting & Ranking,show top 20 PRODUCTS by RATINGS,"df.sort_values(by='ratings', ascending=True).head(20)",products,ratings
Sorting & Ranking,list 10 Storez having low to high PROFIT,"df.sort_values(by='profit', ascending=True).head(10)",stores,profit
Sorting & Ranking,categores sorted least by ORDERS,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,get top 20 customrs increasing REVENUE,"df.sort_values(by='revenue', ascending=True).head(20)",customers,revenue
Sorting & Ranking,list 5 categores having decreasing odders,"df.sort_values(by='orders', ascending=False).head(5)",categories,orders
Sorting & Ranking,show top 20 customrs by REVENUE,"df.sort_values(by='revenue', ascending=False).head(20)",customers,revenue
Sorting & Ranking,get top 10 Storez bottom proffit,"df.sort_values(by='profit', ascending=True).head(10)",stores,profit
Sorting & Ranking,organize productz by raatings (least),"df.sort_values(by='ratings', ascending=True)",products,ratings
Sorting & Ranking,list 20 empoyees having increasing sails,"df.sort_values(by='sales', ascending=True).head(20)",employees,sales
Sorting & Ranking,sort CategorieS by Orderz in bottom order,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,arrange all stoers according to most PROFIT,"df.sort_values(by='profit', ascending=False)",stores,profit
Sorting & Ranking,get top 3 PRODUCTS greatest RATINGS,"df.sort_values(by='ratings', ascending=False).head(3)",products,ratings
Sorting & Ranking,get top 20 custmers highest Revenue,"df.sort_values(by='revenue', ascending=False).head(20)",customers,revenue
Sorting & Ranking,CustomerS sorted most by reveneu,"df.sort_values(by='revenue', ascending=False)",customers,revenue
Sorting & Ranking,CategorieS sorted bottom by ORDERS,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,empoyees sorted most by Sells,"df.sort_values(by='sales', ascending=False)",employees,sales
Sorting & Ranking,EMPLoyees sorted low to high by unit_sold,"df.sort_values(by='units_sold', ascending=True)",employees,units_sold
Sorting & Ranking,show top 20 PRODUCTS by ratingz,"df.sort_values(by='ratings', ascending=False).head(20)",products,ratings
Sorting & Ranking,3 empoyees with greatest sails,"df.sort_values(by='sales', ascending=False).head(3)",employees,sales
Sorting & Ranking,customrs sorted bottom by Revenue,"df.sort_values(by='revenue', ascending=True)",customers,revenue
Sorting & Ranking,5 empoyees with greatest SALES,"df.sort_values(by='sales', ascending=False).head(5)",employees,sales
Sorting & Ranking,show top 5 EMPLoyees by SALES,"df.sort_values(by='sales', ascending=True).head(5)",employees,sales
Sorting & Ranking,organize PRODUCTS by RATINGS (bottom),"df.sort_values(by='ratings', ascending=True)",products,ratings
Sorting & Ranking,categores sorted ascending by odders,"df.sort_values(by='orders', ascending=True)",categories,orders
Sorting & Ranking,categoriess sorted top by ORDERS,"df.sort_values(by='orders', ascending=False)",categories,orders
Sorting & Ranking,show top 10 empoyees by Sells,"df.sort_values(by='sales', ascending=False).head(10)",employees,sales
Sorting & Ranking,CustomerS sorted descending by REVENUE,"df.sort_values(by='revenue', ascending=False)",customers,revenue
Sorting & Ranking,arrange all custmers according to low to high reveneu,"df.sort_values(by='revenue', ascending=True)",customers,revenue
Sorting & Ranking,show top eight categories by orders,"df.sort_values(by='orders', ascending=True).head(8)",categories,orders
Sorting & Ranking,list two stores having most profit,"df.sort_values(by='profit', ascending=False).head(2)",stores,profit
Sorting & Ranking,show top two employees by units_sold,"df.sort_values(by='units_sold', ascending=True).head(2)",employees,units_sold
Sorting & Ranking,three employees with bottom units_sold,"df.sort_values(by='units_sold', ascending=True).head(3)",employees,units_sold
Sorting & Ranking,list three employees having greatest units_sold,"df.sort_values(by='units_sold', ascending=False).head(3)",employees,units_sold
Sorting & Ranking,display five employees sorted by units_sold (increasing),"df.sort_values(by='units_sold', ascending=True).head(5)",employees,units_sold
Sorting & Ranking,display fifty employees sorted by units_sold (increasing),"df.sort_values(by='units_sold', ascending=True).head(50)",employees,units_sold
Sorting & Ranking,eight employees with smallest units_sold,"df.sort_values(by='units_sold', ascending=True).head(8)",employees,units_sold
Sorting & Ranking,list four employees having least sales,"df.sort_values(by='sales', ascending=True).head(4)",employees,sales
Sorting & Ranking,display nine categories sorted by orders (increasing),"df.sort_values(by='orders', ascending=True).head(9)",categories,orders
Sorting & Ranking,display twenty products sorted by ratings (decreasing),"df.sort_values(by='ratings', ascending=False).head(20)",products,ratings
Sorting & Ranking,display six employees sorted by sales (bottom),"df.sort_values(by='sales', ascending=True).head(6)",employees,sales
Sorting & Ranking,display thirty employees sorted by units_sold (increasing),"df.sort_values(by='units_sold', ascending=True).head(30)",employees,units_sold
Sorting & Ranking,five products with low to high ratings,"df.sort_values(by='ratings', ascending=True).head(5)",products,ratings
Sorting & Ranking,get top seven categories most orders,"df.sort_values(by='orders', ascending=False).head(7)",categories,orders
Sorting & Ranking,show top twenty employees by units_sold,"df.sort_values(by='units_sold', ascending=False).head(20)",employees,units_sold
Sorting & Ranking,display fifty employees sorted by units_sold (bottom),"df.sort_values(by='units_sold', ascending=True).head(50)",employees,units_sold
Sorting & Ranking,list seven employees having ascending sales,"df.sort_values(by='sales', ascending=True).head(7)",employees,sales
Sorting & Ranking,get top four products least ratings,"df.sort_values(by='ratings', ascending=True).head(4)",products,ratings
Sorting & Ranking,show top six stores by profit,"df.sort_values(by='profit', ascending=False).head(6)",stores,profit
Sorting & Ranking,display six entries sorted by Posting Updated (highest),"df.sort_values(by='Posting Updated', ascending=False).head(6)",jobs,Posting Updated
Sorting & Ranking,sort jobs by Title Classification in low to high order,"df.sort_values(by='Title Classification', ascending=True)",jobs,Title Classification
Sorting & Ranking,list three jobs with highest Title Classification,"df.sort_values(by='Title Classification', ascending=False).head(3)",jobs,Title Classification
Sorting & Ranking,arrange job entries according to highest Division/Work Unit,"df.sort_values(by='Division/Work Unit', ascending=False)",jobs,Division/Work Unit
Sorting & Ranking,arrange job entries according to decreasing Full-Time/Part-Time indicator,"df.sort_values(by='Full-Time/Part-Time indicator', ascending=False)",jobs,Full-Time/Part-Time indicator
Sorting & Ranking,display nine entries sorted by Residency Requirement (highest),"df.sort_values(by='Residency Requirement', ascending=False).head(9)",jobs,Residency Requirement
Sorting & Ranking,display five entries sorted by Posting Date (low to high),"df.sort_values(by='Posting Date', ascending=True).head(5)",jobs,Posting Date
Sorting & Ranking,organize postings by Post Until descending,"df.sort_values(by='Post Until', ascending=False)",jobs,Post Until
Sorting & Ranking,sort jobs by Post Until in top order,"df.sort_values(by='Post Until', ascending=False)",jobs,Post Until
Sorting & Ranking,organize postings by Salary Range To increasing,"df.sort_values(by='Salary Range To', ascending=True)",jobs,Salary Range To
Sorting & Ranking,display two entries sorted by Division/Work Unit (least),"df.sort_values(by='Division/Work Unit', ascending=True).head(2)",jobs,Division/Work Unit
Sorting & Ranking,display eight entries sorted by Posting Date (smallest),"df.sort_values(by='Posting Date', ascending=True).head(8)",jobs,Posting Date
Sorting & Ranking,list seven jobs with bottom Salary Range From,"df.sort_values(by='Salary Range From', ascending=True).head(7)",jobs,Salary Range From
Sorting & Ranking,display seven entries sorted by Posting Updated (descending),"df.sort_values(by='Posting Updated', ascending=False).head(7)",jobs,Posting Updated
Sorting & Ranking,thirty job postings with top Preferred Skills,"df.sort_values(by='Preferred Skills', ascending=False).head(30)",jobs,Preferred Skills
Sorting & Ranking,four job postings with increasing Salary Range From,"df.sort_values(by='Salary Range From', ascending=True).head(4)",jobs,Salary Range From
Sorting & Ranking,organize postings by Recruitment Contact least,"df.sort_values(by='Recruitment Contact', ascending=True)",jobs,Recruitment Contact
Sorting & Ranking,list four jobs with high to low Work Location 1,"df.sort_values(by='Work Location 1', ascending=False).head(4)",jobs,Work Location 1
Sorting & Ranking,sort jobs by Salary Range From in highest order,"df.sort_values(by='Salary Range From', ascending=False)",jobs,Salary Range From
Sorting & Ranking,list two jobs with most Minimum Qual Requirements,"df.sort_values(by='Minimum Qual Requirements', ascending=False).head(2)",jobs,Minimum Qual Requirements
Sorting & Ranking,nine job postings with increasing Job Category,"df.sort_values(by='Job Category', ascending=True).head(9)",jobs,Job Category
Sorting & Ranking,sort jobs by To Apply in bottom order,"df.sort_values(by='To Apply', ascending=True)",jobs,To Apply
Sorting & Ranking,forty job postings with ascending Recruitment Contact,"df.sort_values(by='Recruitment Contact', ascending=True).head(40)",jobs,Recruitment Contact
Sorting & Ranking,display seven entries sorted by Title Classification (greatest),"df.sort_values(by='Title Classification', ascending=False).head(7)",jobs,Title Classification
Sorting & Ranking,organize postings by Title Code No most,"df.sort_values(by='Title Code No', ascending=False)",jobs,Title Code No
Sorting & Ranking,show top two jobs by Civil Service Title,"df.sort_values(by='Civil Service Title', ascending=False).head(2)",jobs,Civil Service Title
Sorting & Ranking,organize postings by Posting Date descending,"df.sort_values(by='Posting Date', ascending=False)",jobs,Posting Date
Sorting & Ranking,list ten jobs with top Full-Time/Part-Time indicator,"df.sort_values(by='Full-Time/Part-Time indicator', ascending=False).head(10)",jobs,Full-Time/Part-Time indicator
Sorting & Ranking,display four entries sorted by Residency Requirement (descending),"df.sort_values(by='Residency Requirement', ascending=False).head(4)",jobs,Residency Requirement
Sorting & Ranking,show top six jobs by Preferred Skills,"df.sort_values(by='Preferred Skills', ascending=True).head(6)",jobs,Preferred Skills
Sorting & Ranking,display six entries sorted by Work Location 1 (most),"df.sort_values(by='Work Location 1', ascending=False).head(6)",jobs,Work Location 1
Sorting & Ranking,order jobs based on Salary Frequency (ascending),"df.sort_values(by='Salary Frequency', ascending=True)",jobs,Salary Frequency
Sorting & Ranking,show top three jobs by Full-Time/Part-Time indicator,"df.sort_values(by='Full-Time/Part-Time indicator', ascending=False).head(3)",jobs,Full-Time/Part-Time indicator
Sorting & Ranking,twenty job postings with ascending Work Location 1,"df.sort_values(by='Work Location 1', ascending=True).head(20)",jobs,Work Location 1
Sorting & Ranking,sort jobs by Salary Frequency in increasing order,"df.sort_values(by='Salary Frequency', ascending=True)",jobs,Salary Frequency
Sorting & Ranking,show top forty jobs by Salary Frequency,"df.sort_values(by='Salary Frequency', ascending=False).head(40)",jobs,Salary Frequency
Sorting & Ranking,order jobs based on Salary Range To (least),"df.sort_values(by='Salary Range To', ascending=True)",jobs,Salary Range To
Sorting & Ranking,arrange job entries according to descending Job Category,"df.sort_values(by='Job Category', ascending=False)",jobs,Job Category
Sorting & Ranking,sort jobs by Salary Range To in least order,"df.sort_values(by='Salary Range To', ascending=True)",jobs,Salary Range To
Sorting & Ranking,show top twenty jobs by Job Description,"df.sort_values(by='Job Description', ascending=False).head(20)",jobs,Job Description